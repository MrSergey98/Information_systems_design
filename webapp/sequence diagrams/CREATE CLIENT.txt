actor User
participant "server: HTTPServer" as server
participant "request_handler: PathMapperHttp" as request_handler
participant "controller:CreateClientController" as CreateClientWebController
participant "BasicController" as BasicWebController
participant "repository: ClientRepFileAdapter" as repository

participant jinja_env



User->>server: GET /client_new
server->>request_handler: do_GET()
request_handler->>CreateClientWebController: __init__()
CreateClientWebController->>BasicWebController: __init__()
BasicWebController->>repository: __init__()
request_handler->>request_handler: display_view()
request_handler->>CreateClientWebController: get_web_view()
CreateClientWebController->>jinja_env:get_template('webapp/shablon_form.html')
request_handler->>request_handler: wfile.write(template)

User->>server: POST /client_new
server->>request_handler: do_POST()
request_handler->>CreateClientWebController: __init__()
CreateClientWebController->>BasicWebController: __init__()
BasicWebController->>repository: __init__()
request_handler->>CreateClientWebController:handle_post(data_dict)
CreateClientWebController->>repository: add(data)
alt validation_passed
  request_handler->>request_handler: send_response(300)
else validation_failed
  request_handler->>request_handler :display_view(error=e)
request_handler->>CreateClientWebController: get_web_view(error=e)
CreateClientWebController->>jinja_env:get_template('webapp/shablon_form.html')
request_handler->>request_handler: send_response(200)
request_handler->>request_handler: wfile.write(view)
end
